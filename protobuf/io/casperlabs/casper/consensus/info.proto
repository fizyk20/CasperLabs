syntax = "proto3";
package io.casperlabs.casper.consensus.info;

import "io/casperlabs/casper/consensus/consensus.proto";

message BlockInfo {
    io.casperlabs.casper.consensus.BlockSummary summary = 1;
    Status status = 2;

    enum View {
        // Only includes information which is based on the header.
        BASIC = 0;
        // Includes extra information that requires the full block,
        // for example the size, number of errors in deploys, etc.
        FULL = 1;
    }

    message Status {
        float fault_tolerance = 1;
        Stats stats = 2;

        // Statistics derived from the full block.
        message Stats {
            uint32 block_size_bytes = 1;
            uint32 deploy_error_count = 2;
            uint64 deploy_cost_total = 3;
        }
    }
}


message DeployInfo {
    io.casperlabs.casper.consensus.Deploy deploy = 1;
    repeated ProcessingResult processing_results = 2;
    Status status = 3;

    message ProcessingResult {
        BlockInfo block_info = 1;
        uint64 cost = 2;
        bool is_error = 3;
        string error_message = 4;
    }

    enum View {
        // Only includes the header of the deploys, not the body with the code.
        BASIC = 0;
        // Includes the body with the code.
        FULL = 1;
    }

    enum State {
        UNDEFINED = 0;
        // Waiting to be included in a block. Deploys can go back to pending
        // if the block it was included in got orphaned.
        PENDING = 1;
        // Included in one or more blocks, waiting to be finalized, or potentially
        // orphaned and re-queued.
        PROCESSED = 2;
        // The block the deploy was included has been finalized along with all the deploys in it.
        FINALIZED = 3;
        // Deploys get discarded if their account doesn't exist, or their TTL expires.
        // They will be removed after a grace period to free up space.
        DISCARDED = 4;
    }

    message Status {
        State state = 1;
        // Potential explanation for the current state of the deploy, e.g. the reason it got discarded.
        string message = 2;
    }
}

message Event{
    oneof event_instance {
        EventAddBlock add_block = 1;
    }
}

message EventAddBlock{
    bytes block_hash = 1;
}
